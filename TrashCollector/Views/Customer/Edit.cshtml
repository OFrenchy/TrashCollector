@model TrashCollector.Models.Customer

@{
    ViewBag.Title = "Edit";
    ViewBag.RoleName = "Customer";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Customer</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @*// is there a "ReadOnly" property, like the above "HiddenFor"*@


    @*@Html.DropDownList("UserRoles", (IEnumerable<SelectListItem>)ViewBag.UserNames, " ")*@
    @*@Html.DisplayNameFor(model => model.Name)*@
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    @*@Html.DisplayNameFor(model => model.Street)*@
    <div class="form-group">
        @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
        </div>
    </div>
    @*@Html.DisplayNameFor(model => model.City)*@
    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>
    @*@Html.DisplayFor(model => model.State)*@
    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
        </div>
    </div>
    @*@Html.DropDownList("UserRoles", (IEnumerable<SelectListItem>)ViewBag.UserNames, " ")*@
    @*@Html.DisplayNameFor(model => model.DayOfWeekPickup)*@
    @*@Html.DropDownList("DayOfWeekOPickup", (IEnumerable<SelectListItem>)ViewBag.DaysOfWeek, " ")*@
    <div class="form-group">
        @Html.LabelFor(model => model.DayOfWeekPickup, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.DayOfWeekPickup, new { htmlAttributes = new { @class = "form-control" } })*@
            @*@Html.ValidationMessageFor(model => model.DayOfWeekPickup, "", new { @class = "text-danger" })*@
            @Html.DropDownList("DayOfWeekPickup", (IEnumerable<SelectListItem>)ViewBag.DaysOfWeek, " ")
        </div>
    </div>

    @*@Html.DisplayNameFor(model => model.SpecialPickupDate)*@
    <div class="form-group">
        @Html.LabelFor(model => model.SpecialPickupDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SpecialPickupDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SpecialPickupDate, "", new { @class = "text-danger" })
        </div>
    </div>
    @*@Html.DisplayNameFor(model => model.StopDate)*@
    <div class="form-group">
        @Html.LabelFor(model => model.StopDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StopDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StopDate, "", new { @class = "text-danger" })
        </div>
    </div>
    @*@Html.DisplayNameFor(model => model.StartDate)*@
    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
        <div class="col-md-10">
            @Html.DisplayNameFor(model => model.Bill)
            @Html.DisplayFor(model => model.Bill)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.DisplayNameFor(model => model.BillDetails)
            @Html.DisplayFor(model => model.BillDetails)
        </div>
    </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationUserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicationUserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicationUserId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Details", "Details", new { id = Model.ID })
</div>
